{"paragraphs":[{"text":"val tags = List(\n    // woods\n   /* \"cherry flooring\", \"white oak flooring\", \"red oak flooring\", \"black walnut flooring\", \"poplar flooring\", \"pine flooring\", \n    \"water softener\", \"heat pump\",\n    \"hot water expansion tank\",\n    \"fuel oil tank\",\n    \"natural gas meter\",\n    \"plumbing vent\",\n    \"wood dry rot\",\n    \"termite tubes\", \"galvanized steel pipes\", \"terra cotta pipes\", \"copper pipes\",\n    \"granite countertops\",\n    \"formica countertops\",\n    \"marble countertops\",\n    // electrical\n    \"knob and tube wiring\", \"romex wiring\", \"aluminum wiring\",\n    // problems\n    \"asbestos\",\n    \"fire damage\",\n    \"sistered beam\",\n    // exterior\n    \"alumninum siding\", \"asbestos siding\", \"brick exterior walls\", \n    \"stone exterior walls\", \"stucco siding\", \"wooden siding\",\n    // interior features\n    \"glass doorknobs\"*/\n   // \"sump pump\",\n//    \"asbestos paper insulation\",\n  //  \"breaker box\"\n//  \"fios box\"\n\"pedestal sump pump\"\n)\n\nimport java.io.File\n\nval root = \"/data/images/household/\"\nnew File(root).mkdirs()\n\nval categories = (new File(root)).listFiles.filter(_.isDirectory)\n\n\ntags.filter(!categories.contains(_)).map( (tag) => new File(root + tag).mkdirs() )\n        \n(new File(root)).listFiles.filter(_.isDirectory).map( (path) => path + \"\\t\" + path.listFiles.size )","user":"anonymous","dateUpdated":"2019-01-20T14:53:48-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544300071583_1158555194","id":"20181208-151431_1580164655","dateCreated":"2018-12-08T15:14:31-0500","dateStarted":"2019-01-20T14:53:48-0500","dateFinished":"2019-01-20T14:53:48-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3444"},{"text":"def contents(): String = {\n  val folderContents = (new File(root)).listFiles.filter(_.isDirectory).map( (path) => (path, path.listFiles.size ) )\n\n  val folderContentsLines = folderContents.map( (t: (java.io.File, Int)) => (t._1 + \"\", t._2 + \"\") ).map( (a) => a._1.substring(23) + \"\\t\" + a._2  )\n  \n  \"%table category\\tcount\\n\" + folderContentsLines.mkString(\"\\n\")\n}\n\nprint(contents)\n","user":"anonymous","dateUpdated":"2019-01-20T14:53:53-0500","config":{"colWidth":12,"fontSize":10,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"category":"string","count":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"1":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"category":"string","count":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default","stacked":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"category","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544300056046_-718165551","id":"20181208-151416_186543452","dateCreated":"2018-12-08T15:14:16-0500","dateStarted":"2019-01-20T14:53:53-0500","dateFinished":"2019-01-20T14:53:53-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3445"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544300054930_1337167432","id":"20181208-151414_1480047688","dateCreated":"2018-12-08T15:14:14-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3446"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544323064531_-1846111158","id":"20181208-213744_2106685729","dateCreated":"2018-12-08T21:37:44-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3447"},{"text":"\n// TODO - how to get from the environment?\n// TODO - can I do more than one language?\n// TODO - status reporting \n// TODO - push to github\ndef splitQuery(url: String): Map[String, String] = {\n    import java.net._\n    import scala.collection.JavaConversions._\n    \n    val query = new URL(url).getQuery\n    val pairs = query.split(\"&\")\n    \n    pairs.map(\n      (pair: String) => {\n        val idx = pair.indexOf(\"=\");\n        (URLDecoder.decode(pair.substring(0, idx), \"UTF-8\") -> URLDecoder.decode(pair.substring(idx + 1), \"UTF-8\"))\n      }\n    ).toMap\n}\n\n//splitQuery(\"https://tse1.mm.bing.net/th?id=OIP.eMnBWtXVNYWK-qerspawmAHaFc&pid=Api\")(\"id\")","user":"anonymous","dateUpdated":"2019-01-20T14:53:57-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544321956961_-1438548376","id":"20181208-211916_689764019","dateCreated":"2018-12-08T21:19:16-0500","dateStarted":"2019-01-20T14:53:57-0500","dateFinished":"2019-01-20T14:53:57-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3448"},{"text":"def getResults(searchTerm: String, page: Int): Iterable[String] = {\n  println(searchTerm, page)\n  \n  import java.net._\n  import java.util._\n  import java.io._\n  import javax.net.ssl.HttpsURLConnection\n  import com.google.gson.Gson\n  import com.google.gson.GsonBuilder\n  import com.google.gson.JsonObject\n  import com.google.gson.JsonParser\n\n  val subscriptionKey = \"90d32ad783f84d8ebef3d9914d958407\";\n  val host = \"https://api.cognitive.microsoft.com\";\n  val path = \"/bing/v7.0/images/search\";\n  \n  val url = new URL(host + path + \"?offset=\" + ((page - 1) * 150) + \"&count=150&q=\" +  URLEncoder.encode(searchTerm, \"UTF-8\"))\n  val connection = url.openConnection()\n  connection.setRequestProperty(\"Ocp-Apim-Subscription-Key\", subscriptionKey)\n\n  import scala.collection.JavaConversions._\n\n  val stream = connection.getInputStream();\n  val response = new Scanner(stream).useDelimiter(\"\\\\A\").next()\n\n  val headers = connection.getHeaderFields();\n\n  stream.close();\n  val parser = new JsonParser();\n  val json = parser.parse(response).getAsJsonObject();\n  val total = Integer.parseInt(json.get(\"totalEstimatedMatches\").getAsString());\n  val pages = total / 150 - 1\n  val results = json.getAsJsonArray(\"value\");\n  \n  val next: Iterable[String] = {\n    if ( (page + 1) < pages ) {\n      println(\"Fetching page \" + (page + 1 ))\n      \n      getResults(searchTerm, page + 1)\n    } else {\n      println(\"Completed @ \" + page )\n      Seq()\n    }\n  }\n  \n  results.map(\n    _.asInstanceOf[JsonObject]\n  ).map(\n    _.get(\"thumbnailUrl\").getAsString()\n  ) ++ next\n}\n\n//getResults(\"asbestos\", 1)\n\n\n","user":"anonymous","dateUpdated":"2019-01-20T14:53:59-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544313211311_1416234074","id":"20181208-185331_1267985016","dateCreated":"2018-12-08T18:53:31-0500","dateStarted":"2019-01-20T14:53:59-0500","dateFinished":"2019-01-20T14:53:59-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3449"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544322816151_-1372286810","id":"20181208-213336_883295468","dateCreated":"2018-12-08T21:33:36-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3450"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544382788361_-119257252","id":"20181209-141308_882037678","dateCreated":"2018-12-09T14:13:08-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3451"},{"text":"def download(url: String, category: String) {\n  println(url + \" \" + category)\n  //val url = \"https://tse1.mm.bing.net/th?id=OIP.eMnBWtXVNYWK-qerspawmAHaFc&pid=Api\"\n  //splitQuery(url)(\"id\")\n  \n  import sys.process._\n  import java.net.URL\n  import java.io.File\n  new URL(url) #> new File(\"/data/images/household/\" + category + \"/\" + splitQuery(url)(\"id\") + \".jpeg\") !!\n}\n\n//download(\"https://tse1.mm.bing.net/th?id=OIP.eMnBWtXVNYWK-qerspawmAHaFc&pid=Api\", \"test\")","user":"anonymous","dateUpdated":"2019-01-20T14:54:01-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544322443425_-807057187","id":"20181208-212723_1771637132","dateCreated":"2018-12-08T21:27:23-0500","dateStarted":"2019-01-20T14:54:01-0500","dateFinished":"2019-01-20T14:54:02-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3452"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544323518583_486656642","id":"20181208-214518_1204494236","dateCreated":"2018-12-08T21:45:18-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3453"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544382768439_1618625164","id":"20181209-141248_1322149995","dateCreated":"2018-12-09T14:12:48-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3454"},{"text":"val tagsWithNoRows = (new File(root)).listFiles.filter(_.isDirectory).map( (path) => ( (path + \"\").substring(\"/data/images/household/\".length), path.listFiles.size ) ).filter( _._2 == 0 ).map(_._1)\n\n// TODO - environment varialbes\n// TODO - status reporting\n// TODO - timeout?\n","user":"anonymous","dateUpdated":"2019-01-20T14:54:05-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544324546201_-177788879","id":"20181208-220226_682407984","dateCreated":"2018-12-08T22:02:26-0500","dateStarted":"2019-01-20T14:54:05-0500","dateFinished":"2019-01-20T14:54:05-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3455"},{"text":"tagsWithNoRows.map(\n  (tag: String) => {\n      getResults(tag, 1).map(\n        (url) => download(url, tag)\n      )\n  }    \n)","user":"anonymous","dateUpdated":"2019-01-20T14:54:06-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":294.006,"optionOpen":false}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544321278204_11822089","id":"20181208-210758_895983555","dateCreated":"2018-12-08T21:07:58-0500","dateStarted":"2019-01-20T14:54:06-0500","dateFinished":"2019-01-20T14:54:41-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3456"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544383147858_1988982449","id":"20181209-141907_519894143","dateCreated":"2018-12-09T14:19:07-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3457"},{"text":"println(1)","user":"anonymous","dateUpdated":"2018-12-08T15:13:50-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544300015934_1339178876","id":"20181208-151335_305824037","dateCreated":"2018-12-08T15:13:35-0500","dateStarted":"2018-12-08T15:13:50-0500","dateFinished":"2018-12-08T15:13:57-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3458"},{"text":"print (\"%html\")","user":"anonymous","dateUpdated":"2018-12-09T14:36:50-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544300030033_1200762199","id":"20181208-151350_1539625407","dateCreated":"2018-12-08T15:13:50-0500","dateStarted":"2018-12-09T14:36:50-0500","dateFinished":"2018-12-09T14:36:50-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3459"},{"text":"print(\"%html \")\n  \nval root = \"/data/images/household/\"\n\ndef showImage(file: File) = {\n  import java.io._\n  import java.util._\n  val fis = new FileInputStream(file)\n \n  val data = Array.fill[Byte](file.length.toInt)(0)\n  fis.read(data)\n  fis.close\n \n  val encoded_string = Base64.getEncoder.encodeToString(data)\n  print(\"<img src='data:image/jpeg;base64,\" + encoded_string + \"' style='float:left;padding:5px;max-height:100px' />\")\n\n  //Base64.getEncoder.encodeToString(\"user:pass\".getBytes(StandardCharsets.UTF_8))\n}\n\n\ndef showImages(tag: String) = {\n  import scala.collection.JavaConversions._\n  import java.util.Base64\n  import java.nio.charset.StandardCharsets\n\n  println(\"<h4>\" + tag + \"</h4>\")\n\n  val files = (new File(root + tag)).listFiles\n  files.take(50).map(showImage)\n}\n\ndef showRandomClass = {\n  import scala.collection.JavaConversions._\n\n  val rootFolders = (new File(root)).listFiles.filter(_.isDirectory).map(_.toString).toList\n  val tags = scala.util.Random.shuffle(rootFolders)\n  val tag = tags(0)\n  showImages(tag)\n}\n\nprint(images(\"asbestos\"))","user":"anonymous","dateUpdated":"2018-12-09T21:03:51-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544325871247_-327651628","id":"20181208-222431_2101683763","dateCreated":"2018-12-08T22:24:31-0500","dateStarted":"2018-12-09T21:03:51-0500","dateFinished":"2018-12-09T21:03:51-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3460"},{"text":"%python\nprint(1)\n# options: add a http server\n#          base 64\n#          figure out how to load a local file\n#          figure out progress reporting for a job\n#          figure out how to split the pulling of tags up into spark jobs\n#          can I play a video?\n#          can I play a video with markings?\n#          can I build an app - or is that more for android studio\n#val lines = scala.io.Source.fromFile(\"/data/images/household/poplar/OIP.hgi_ynz9SPPJQM_TiyzVYAHaHa.jpeg\").mkString\nimport base64\nimport os, random\n\nprint(\"%html \")\n\nroot = \"/data/images/household/\"\ntags = os.listdir(root)\nrandom.shuffle(tags)\n\ntag = tags[0]\n\npath = root + tag + \"/\";\nfiles = os.listdir(path)\nrandom.shuffle(files)\nfiltered = files[0:min(len(files), 50)]\n\nprint(\"<h4>\" + tag + \"</h4>\")\n\ndef showImage(file):\n  with open(path + file, \"rb\") as image_file:\n    encoded_string = base64.b64encode(image_file.read())\n    print(\"<img src='data:image/jpeg;base64,\" + encoded_string + \"' style='float:left;padding:5px;max-height:100px' />\")\n    \n[showImage(file) for file in filtered]\n\n\"\"","user":"anonymous","dateUpdated":"2018-12-09T17:21:10-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544325710588_-898687772","id":"20181208-222150_1762632646","dateCreated":"2018-12-08T22:21:50-0500","dateStarted":"2018-12-09T17:21:10-0500","dateFinished":"2018-12-09T17:21:10-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3461"},{"text":"%spark\nprintln(z.select((new File(root)).listFiles.filter(_.isDirectory).map( (path) => ( \"a\"+ (path + \"\").substring(\"/data/images/household/\".length), path.listFiles.size ) ).filter( _._2 > 0 ).map(_._1).zipWithIndex.map((a) => (\"a\",\"b\"))))","user":"anonymous","dateUpdated":"2018-12-09T18:17:19-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false,"runOnSelectionChange":true},"settings":{"params":{"formName":"defaultValue","tag":"cherry","name":"","day":""},"forms":{}},"apps":[],"jobName":"paragraph_1544395335530_-243307060","id":"20181209-174215_1977337233","dateCreated":"2018-12-09T17:42:15-0500","dateStarted":"2018-12-09T18:17:19-0500","dateFinished":"2018-12-09T18:17:19-0500","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3462"},{"text":"print (\"%html \")\n\nval value = z.select(\"tag\",\n       (new File(root))\n           .listFiles\n           .filter(_.isDirectory)\n           .filter(\n               _.listFiles.size > 0\n           )\n           .map(\n               _.toString.substring(\"/data/images/household/\".length)\n           )\n           .map( \n               path => (path, path)\n           ).seq\n)\n\nshowImages(value.toString)","user":"anonymous","dateUpdated":"2018-12-09T21:39:54-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","runOnSelectionChange":true},"settings":{"params":{"name":"","day":"","tag":"hot water expansion tank"},"forms":{"tag":{"type":"Select","options":[{"value":"asbestos siding","displayName":"asbestos siding","$$hashKey":"object:3892"},{"value":"stucco siding","displayName":"stucco siding","$$hashKey":"object:3893"},{"value":"black walnut flooring","displayName":"black walnut flooring","$$hashKey":"object:3894"},{"value":"pine","displayName":"pine","$$hashKey":"object:3895"},{"value":"wood dry rot","displayName":"wood dry rot","$$hashKey":"object:3896"},{"value":"formica countertops","displayName":"formica countertops","$$hashKey":"object:3897"},{"value":"heat pump","displayName":"heat pump","$$hashKey":"object:3898"},{"value":"poplar","displayName":"poplar","$$hashKey":"object:3899"},{"value":"red oak","displayName":"red oak","$$hashKey":"object:3900"},{"value":"romex wiring","displayName":"romex wiring","$$hashKey":"object:3901"},{"value":"sistered beam","displayName":"sistered beam","$$hashKey":"object:3902"},{"value":"cherry flooring","displayName":"cherry flooring","$$hashKey":"object:3903"},{"value":"termite tubes","displayName":"termite tubes","$$hashKey":"object:3904"},{"value":"marble countertops","displayName":"marble countertops","$$hashKey":"object:3905"},{"value":"knob and tube wiring","displayName":"knob and tube wiring","$$hashKey":"object:3906"},{"value":"test","displayName":"test","$$hashKey":"object:3907"},{"value":"aluminum wiring","displayName":"aluminum wiring","$$hashKey":"object:3908"},{"value":"wooden siding","displayName":"wooden siding","$$hashKey":"object:3909"},{"value":"pine flooring","displayName":"pine flooring","$$hashKey":"object:3910"},{"value":"natural gas meter","displayName":"natural gas meter","$$hashKey":"object:3911"},{"value":"fire damage","displayName":"fire damage","$$hashKey":"object:3912"},{"value":"asbestos","displayName":"asbestos","$$hashKey":"object:3913"},{"value":"galvanized steel pipes","displayName":"galvanized steel pipes","$$hashKey":"object:3914"},{"value":"black cherry","displayName":"black cherry","$$hashKey":"object:3915"},{"value":"red oak flooring","displayName":"red oak flooring","$$hashKey":"object:3916"},{"value":"white oak","displayName":"white oak","$$hashKey":"object:3917"},{"value":"water softener","displayName":"water softener","$$hashKey":"object:3918"},{"value":"brick exterior walls","displayName":"brick exterior walls","$$hashKey":"object:3919"},{"value":"alumninum siding","displayName":"alumninum siding","$$hashKey":"object:3920"},{"value":"terra cotta pipes","displayName":"terra cotta pipes","$$hashKey":"object:3921"},{"value":"copper pipes","displayName":"copper pipes","$$hashKey":"object:3922"},{"value":"granite countertops","displayName":"granite countertops","$$hashKey":"object:3923"},{"value":"fuel oil tank","displayName":"fuel oil tank","$$hashKey":"object:3924"},{"value":"glass doorknobs","displayName":"glass doorknobs","$$hashKey":"object:3925"},{"value":"white oak flooring","displayName":"white oak flooring","$$hashKey":"object:3926"},{"value":"cherry","displayName":"cherry","$$hashKey":"object:3927"},{"value":"poplar flooring","displayName":"poplar flooring","$$hashKey":"object:3928"},{"value":"hot water expansion tank","displayName":"hot water expansion tank","$$hashKey":"object:3929"},{"value":"stone exterior walls","displayName":"stone exterior walls","$$hashKey":"object:3930"},{"value":"plumbing vent","displayName":"plumbing vent","$$hashKey":"object:3931"},{"value":"water softwener","displayName":"water softwener","$$hashKey":"object:3932"}],"name":"tag","displayName":"tag","defaultValue":"","hidden":false,"$$hashKey":"object:3880"}}},"apps":[],"jobName":"paragraph_1544397217898_765604869","id":"20181209-181337_1974125944","dateCreated":"2018-12-09T18:13:37-0500","dateStarted":"2018-12-09T21:39:54-0500","dateFinished":"2018-12-09T21:39:55-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3463"},{"text":"%pyspark\n# TODO - bash\n# TODO - does matplotlib work?\n\nimport matplotlib\nimport io\n\n# If you use the use() function, this must be done before importing matplotlib.pyplot. Calling use() after pyplot has been imported will have no effect.\n# see: http://matplotlib.org/faq/usage_faq.html#what-is-a-backend\nmatplotlib.use('Agg')\nimport matplotlib.pyplot as plt\n\ndef show(p):\n    img = io.StringIO()\n    p.savefig(img, format='svg')\n    img.seek(0)\n    print(\"%html <div style='width:600px'>\" + img.getvalue() + \"</div>\")\n\nplt.plot([1,2,3,4])\nplt.ylabel('some numbers')\nshow(plt)\n","user":"anonymous","dateUpdated":"2018-12-09T16:31:51-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544325771003_-1220965408","id":"20181208-222251_1375214267","dateCreated":"2018-12-08T22:22:51-0500","dateStarted":"2018-12-09T16:31:51-0500","dateFinished":"2018-12-09T16:31:52-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3464"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-12-09T16:30:53-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1544391053781_29002280","id":"20181209-163053_374781925","dateCreated":"2018-12-09T16:30:53-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3465"}],"name":"images","id":"2DXN4AY4E","noteParams":{},"noteForms":{},"angularObjects":{"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"simple","personalizedMode":"false"},"info":{}}